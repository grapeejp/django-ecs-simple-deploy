"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
# .envファイルから環境変数を読み込む
env = environ.Env()
env.read_env(BASE_DIR / ".env")
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=True)

# Basic認証設定（本番環境では外部で制御）
BASIC_AUTH_ENABLED = env.bool("BASIC_AUTH_ENABLED", default=False) and not DEBUG

# 環境変数から取得、存在しない場合はワイルドカードを使用
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "*").split(",")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",  # allauth required
    # django-allauth
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    # 自作アプリケーション
    "core",
    "proofreading_ai",
    "tags",
    "grapecheck",  # グレイプらしさチェッカー
]

MIDDLEWARE = [
    # "core.middleware.BasicAuthMiddleware",  # nginx プロキシでBasic認証を行うため無効化
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "allauth.account.middleware.AccountMiddleware",  # allauth required
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "ja"

TIME_ZONE = "Asia/Tokyo"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# django-allauth設定
SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    # デフォルトのDjango認証バックエンド
    'django.contrib.auth.backends.ModelBackend',
    # allauth用認証バックエンド
    'allauth.account.auth_backends.AuthenticationBackend',
]

# ログイン・ログアウト後のリダイレクト先
LOGIN_URL = '/accounts/login/'  # 未ログインユーザーのリダイレクト先
LOGIN_REDIRECT_URL = '/proofreading_ai/'  # ログイン後は校正AIページへ
LOGOUT_REDIRECT_URL = '/accounts/login/'

# allauth設定
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'none'  # 社内利用のため
ACCOUNT_USERNAME_REQUIRED = True  # usernameも使用可能にする
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300
ACCOUNT_SIGNUP_REDIRECT_URL = '/proofreading_ai/'  # 新規登録後も校正AIページへ
ACCOUNT_LOGIN_REDIRECT_URL = '/proofreading_ai/'   # ログイン後は校正AIページへ
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'

# 新規登録を有効化（社内メンバー用テストアカウント作成可能）
ACCOUNT_ALLOW_REGISTRATION = True

# 新しい形式の設定（非推奨警告を解消）
ACCOUNT_LOGIN_METHODS = ['username', 'email']  # ユーザー名とメールの両方でログイン可能
ACCOUNT_SIGNUP_FIELDS = ['email', 'username', 'password1', 'password2']
ACCOUNT_RATE_LIMITS = {
    'login_failed': '5/5m',  # 5回失敗で5分間ロック
}

# Google OAuth設定
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
            'hd': 'grapee.co.jp',  # Google Workspaceドメイン制限
        },
        'OAUTH_PKCE_ENABLED': True,
    }
}

# Social accountの設定
SOCIALACCOUNT_LOGIN_ON_GET = True
SOCIALACCOUNT_AUTO_SIGNUP = True  # 自動でアカウント作成（@grapee.co.jpのみ）
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_STORE_TOKENS = True

# @grapee.co.jpドメインのみ許可
SOCIALACCOUNT_ADAPTER = 'core.adapters.GrapeeWorkspaceAdapter'

# セッション設定（ログインループ問題解決）
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_NAME = 'grapee_sessionid'
SESSION_COOKIE_AGE = 86400  # 24時間
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# HTTP環境でのセッション設定（本番対応）
SESSION_COOKIE_SECURE = False  # HTTPでも動作するように
SESSION_COOKIE_HTTPONLY = True  # XSS対策
SESSION_COOKIE_SAMESITE = 'Lax'  # CSRF対策とブラウザ互換性

# CSRF設定（HTTP環境対応）
CSRF_COOKIE_SECURE = False
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_TRUSTED_ORIGINS = [
    'http://staging.grape-app.jp',
    'https://staging.grape-app.jp',
    'http://localhost:8000',
    'http://127.0.0.1:8000',
]

# ドメイン設定（セッション共有用）
SESSION_COOKIE_DOMAIN = None  # 自動検出
CSRF_COOKIE_DOMAIN = None  # 自動検出

# データベースクエリタイムアウト（大容量テキスト校正対応）
DATABASES['default']['OPTIONS'] = {
    'timeout': 600,  # 10分
}

# キャッシュタイムアウト
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'TIMEOUT': 300,  # 5分
    }
}
