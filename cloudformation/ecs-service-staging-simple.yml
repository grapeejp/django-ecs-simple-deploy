AWSTemplateFormatVersion: '2010-09-09'
Description: 'Simple Django ECS Service for Staging'

Parameters:
  ImageUrl:
    Type: String
    Description: The URL of the Docker image to run
    Default: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/django-ecs-app:latest

Resources:
  # ECS Task Definition
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: django-app-staging-simple
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Sub 'django-ecs-cluster-staging-v2-ECSTaskExecutionRole'
      TaskRoleArn:
        Fn::ImportValue:
          !Sub 'django-ecs-cluster-staging-v2-ECSTaskRole'
      ContainerDefinitions:
        - Name: django-app
          Image: !Ref ImageUrl
          Essential: true
          PortMappings:
            - ContainerPort: 8000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: "/ecs/django-app-staging-simple"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: ALLOWED_HOSTS
              Value: 'staging.grape-app.jp,localhost,127.0.0.1,52.68.234.126,10.0.2.62'
            - Name: DJANGO_SETTINGS_MODULE
              Value: 'config.settings'
            - Name: SECRET_KEY
              Value: 'django-insecure-temporary-key-for-staging'
            - Name: DEBUG
              Value: "False"
            - Name: HTTPS_ENABLED
              Value: "True"
            # AWS認証情報（環境変数で設定）
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            # 機密情報は実際のデプロイ時に手動で設定
            # - Name: CHATWORK_API_TOKEN
            # - Name: CHATWORK_ROOM_ID  
            # - Name: GOOGLE_OAUTH_CLIENT_ID
            # - Name: GOOGLE_OAUTH_CLIENT_SECRET

  # ECS Service (ALBなし、パブリックIP直接アクセス)
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: django-ecs-service-staging-simple
      Cluster:
        Fn::ImportValue:
          !Sub 'django-ecs-cluster-staging-v2-ECSCluster'
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Sub 'django-ecs-cluster-staging-v2-ECSPublicSecurityGroup'
          Subnets:
            - Fn::ImportValue:
                !Sub 'django-ecs-cluster-staging-v2-PublicSubnet1'
            - Fn::ImportValue:
                !Sub 'django-ecs-cluster-staging-v2-PublicSubnet2'

Outputs:
  Service:
    Description: The ECS Service
    Value: !Ref Service
    Export:
      Name: !Sub "${AWS::StackName}-Service"
      
  TaskDefinition:
    Description: The Task Definition
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub "${AWS::StackName}-TaskDefinition" 