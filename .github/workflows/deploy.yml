name: Deploy to ECS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Set up variables
      id: vars
      run: |
        echo "ECR_REPOSITORY=django-ecs-app" >> $GITHUB_ENV
        echo "IMAGE_TAG=latest" >> $GITHUB_ENV
        echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
        
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
        
    - name: Check/Create ECR Repository
      run: |
        aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
        aws ecr create-repository --repository-name $ECR_REPOSITORY
        
    - name: Deploy ECS Cluster
      run: |
        aws cloudformation deploy \
          --stack-name django-ecs-cluster \
          --template-file cloudformation/ecs-cluster.yml \
          --capabilities CAPABILITY_IAM \
          --no-fail-on-empty-changeset
          
    - name: Deploy ECS Service
      run: |
        aws cloudformation deploy \
          --stack-name django-ecs-service \
          --template-file cloudformation/ecs-service.yml \
          --parameter-overrides ImageUrl=$IMAGE_URI \
          --no-fail-on-empty-changeset
          
    - name: Get Application URL
      run: |
        ALB_DNS=$(aws cloudformation describe-stacks --stack-name django-ecs-cluster --query "Stacks[0].Outputs[?OutputKey=='LoadBalancerDNSName'].OutputValue" --output text)
        echo "アプリケーションアクセスURL: http://$ALB_DNS" 